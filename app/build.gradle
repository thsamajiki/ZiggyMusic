plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.hero.ziggymusic"
        minSdk 27
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        buildFeatures {
            viewBinding true
            dataBinding true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.activity:activity-ktx:1.6.0'
    implementation "androidx.fragment:fragment-ktx:1.5.3"
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    def lifecycle_version = "2.5.1"

    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    // ViewModel utilities for Compose
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    // Saved state module for ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")

    // Room components
    def room_version = "2.4.3"

    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")
//    kapt("androidx.room:room-compiler:$room_version") // To use Kotlin annotation processing tool (kapt)
    implementation("androidx.room:room-ktx:$room_version") // optional - Kotlin Extensions and Coroutines support for Room
//    implementation("androidx.room:room-rxjava2:$room_version") // optional - RxJava2 support for Room
//    implementation("androidx.room:room-rxjava3:$room_version") // optional - RxJava3 support for Room
//    implementation("androidx.room:room-guava:$room_version") // optional - Guava support for Room, including Optional and ListenableFuture
    testImplementation("androidx.room:room-testing:$room_version") // optional - Test helpers
    implementation("androidx.room:room-paging:$room_version") // optional - Paging 3 Integration

    // ExoPlayer
    implementation 'com.google.android.exoplayer:exoplayer-core:2.18.1'
    implementation 'com.google.android.exoplayer:exoplayer-dash:2.18.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.18.1'
}

//plugins {
//    id 'com.android.application'
//    id 'org.jetbrains.kotlin.android'
//    id 'kotlin-parcelize'
//    id 'kotlin-kapt'
//}
//
//apply plugin: 'kotlin-kapt'
//
//android {
//    compileSdk 32
//
//    defaultConfig {
//        applicationId "com.hero.ziggymusic"
//        minSdk 26
//        targetSdk 32
//        versionCode 1
//        versionName "1.0"
//
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//    }
//
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
//    }
//
//    // 뷰 바인딩
//    buildFeatures {
//        viewBinding true
//    }
//
//    // 데이터 바인딩
//    buildFeatures {
//        dataBinding true
//    }
//
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
//    kotlinOptions {
//        jvmTarget = '1.8'
//    }
//    namespace 'com.hero.ziggymusic'
//}
//
//dependencies {
//    implementation 'androidx.core:core-ktx:1.9.0'
//    implementation 'androidx.appcompat:appcompat:1.5.1'
//    implementation 'com.google.android.material:material:1.6.1'
//    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
//    testImplementation 'junit:junit:4.13.2'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
//    androidTestImplementation 'androidx.test:runner:1.4.0'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
//
//    // Room components
//    def room_version = "2.4.3"
//
//    implementation("androidx.room:room-runtime:$room_version")
//    annotationProcessor("androidx.room:room-compiler:$room_version")
//
//    kapt("androidx.room:room-compiler:$room_version") // To use Kotlin annotation processing tool (kapt)
//
//    implementation("androidx.room:room-ktx:$room_version") // optional - Kotlin Extensions and Coroutines support for Room
//    implementation("androidx.room:room-rxjava2:$room_version") // optional - RxJava2 support for Room
//    implementation("androidx.room:room-rxjava3:$room_version") // optional - RxJava3 support for Room
//    implementation("androidx.room:room-guava:$room_version") // optional - Guava support for Room, including Optional and ListenableFuture
//    testImplementation("androidx.room:room-testing:$room_version") // optional - Test helpers
//    implementation("androidx.room:room-paging:2.5.0-alpha03") // optional - Paging 3 Integration
//
//
//    // Kotlin components
//    def kotlin_version = '1.6.10'
//    def coroutines = '1.6.4'
//
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-reflect:1.7.10"
//    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
//    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
//
//
//    // Lifecycle components
//    def lifecycle_version = "2.6.0-alpha02"
//    def arch_version = "2.1.0"
//
//    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
//    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
//    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
//    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
//    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
//    implementation 'androidx.room:room-runtime:2.4.3'
//
//    // ViewModel
//    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
//    // ViewModel utilities for Compose
//    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
//    // LiveData
//    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
//    // Lifecycles only (without ViewModel or LiveData)
//    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
//
//    // Saved state module for ViewModel
//    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
//
//    // alternately - if using Java8, use the following instead of lifecycle-compiler
//    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")
//
//    // optional - helpers for implementing LifecycleOwner in a Service
//    implementation("androidx.lifecycle:lifecycle-service:$lifecycle_version")
//
//    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
//    implementation("androidx.lifecycle:lifecycle-process:$lifecycle_version")
//
//    // optional - ReactiveStreams support for LiveData
//    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version")
//
//    // optional - Test helpers for LiveData
//    testImplementation("androidx.arch.core:core-testing:$arch_version")
//
//    // optional - Test helpers for Lifecycle runtime
//    testImplementation ("androidx.lifecycle:lifecycle-runtime-testing:$lifecycle_version")
//}